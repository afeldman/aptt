[project]
name = "aptt"
version = "0.1.0"
description = ""
authors = [{ name = "anton feldmann", email = "anton.feldmann@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
packages = [{ include = "aptt" }]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pytorch-lightning = ">=2.5.0.post0,<3.0.0"
torchaudio = ">=2.6.0,<3.0.0"
numpy = ">=2.2.3,<3.0.0"
py-cpuinfo = ">=9.0.0,<10.0.0"
loguru = ">=0.7.3,<0.8.0"
matplotlib = ">=3.10.1,<4.0.0"
torch-tensorrt = ">=2.6.0,<3.0.0"
psutil = ">=7.0.0,<8.0.0"
torchsummary = ">=1.5.1,<2.0.0"
ray = { extras = ["tune"], version = "^2.43.0" }
torch = { version = ">=2.6.0,<3.0.0", optional = true }
torchvision = { version = ">=0.21.0,<0.22.0", optional = true }
torchinfo = "^1.8.0"
torchviz = "^0.0.3"
complexpytorch = "^0.4"
zarr = "^3.0.8"
toml = "^0.10.2"
audiomentations = "*"
opencv-python-headless = "^4.11.0.86"
mlflow = "^2.22.0"
plotly = "^6.1.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.11"
mypy = "^1.15.0"
sphinx = "^8.2.3"
pytest = "^8.3.5"
types-toml = "^0.10.8.20240310"
black = "^25.1.0"

[tool.poetry.group.doc.dependencies]
sphinx = "^8.2.3"
sphinx-autodoc-typehints = "^3.2.0"
furo = "^2024.8.6"
autodoc-pydantic = "^2.2.0"
pygraphviz = "^1.14"
recommonmark = "^0.7.1"
myst-parser = "^4.0.1"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = "tattoodb.models"
ignore_errors = true

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
exclude = ["tests/"]
line-length = 100
target-version = "py311"
fix = true

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "D"]
ignore = ["D100", "D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv]
conflicts = [[{ extra = "cpu" }, { extra = "cu124" }]]

[tool.poetry.extras]
cpu = ["torch", "torchvision"]
cu124 = ["torch", "torchvision"]

[tool.uv.sources]
torch = [
    { index = "pytorch-cu124", extra = "cu124", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
    { index = "pytorch-cpu", extra = "cpu" },
]
torchvision = [
    { index = "pytorch-cu124", extra = "cu124", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
    { index = "pytorch-cpu", extra = "cpu" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu124"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[tool.pytest.ini_options]
addopts = "-ra"
filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]
